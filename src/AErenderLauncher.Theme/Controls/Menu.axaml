<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:ClassModifier="internal">
    <Design.PreviewWith>
        <Border Padding="4" Width="384" Height="128">
            <Menu VerticalAlignment="Top">
                <MenuItem Header="_Standard">
                    <MenuItem Header="Nested Item 1" />
                    <MenuItem Header="Nested Item 2" />
                    <Separator />
                    <MenuItem Header="Nested Item 3" />
                </MenuItem>
                <MenuItem Header="Selected" IsSelected="True">
                    <MenuItem Header="Nested Item 1" />
                    <MenuItem Header="Nested Item 2" />
                    <Separator />
                    <MenuItem Header="Nested Item 3" />
                </MenuItem>
                <MenuItem Header="Disabled" IsEnabled="False" />
            </Menu>
        </Border>
    </Design.PreviewWith>

    <x:Double x:Key="MenuBarHeight">32</x:Double>

    <ControlTheme x:Key="FluentTopLevelMenuItem" TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}" />
        <!--  Narrow padding should be used for mouse input, when non-narrow one should be used for touch input in future.  -->
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="PART_LayoutRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <Panel>
                        <ContentPresenter Name="PART_HeaderPresenter"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Stretch"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}" />
                        <Popup Name="PART_Popup"
                               WindowManagerAddShadowHint="False"
                               MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                               IsLightDismissEnabled="True"
                               IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}"
                               Placement="BottomEdgeAlignedLeft"
                               OverlayInputPassThroughElement="{Binding $parent[Menu]}">
                            <Border Background="{DynamicResource ControlBackgroundBrush}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="Stretch"
                                    CornerRadius="{DynamicResource OverlayCornerRadius}">
                                <ScrollViewer Theme="{StaticResource SimpleMenuScrollViewer}">
                                    <ItemsPresenter Name="PART_ItemsPresenter"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    Margin="{DynamicResource MenuFlyoutScrollerMargin}"
                                                    Grid.IsSharedSizeScope="True" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Panel>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:selected">
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundMouseOverBrush}" />
            </Style>
        </Style>

        <!--  Listen for PART_LayoutRoot:pointerover, so it will not be triggered when subitem is pressed  -->
        <Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
            <Setter Property="Background" Value="{DynamicResource ControlBackgroundPressedBrush}" />
        </Style>

        <Style Selector="^:disabled">
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Opacity" Value="{DynamicResource ThemeDisabledOpacity}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Opacity" Value="{DynamicResource ThemeDisabledOpacity}" />
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type Menu}" TargetType="Menu">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="{DynamicResource MenuBarHeight}" />
        <Setter Property="ItemContainerTheme" Value="{StaticResource FluentTopLevelMenuItem}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        HorizontalAlignment="Stretch"
                        Padding="{TemplateBinding Padding}">
                    <ItemsPresenter Name="PART_ItemsPresenter"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    VerticalAlignment="Stretch"
                                    KeyboardNavigation.TabNavigation="Continue" />
                </Border>
            </ControlTemplate>
        </Setter>
    </ControlTheme>
</ResourceDictionary>